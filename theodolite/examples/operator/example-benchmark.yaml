apiVersion: theodolite.com/v1
kind: benchmark
metadata:
  name: uc1-kstreams
spec:
  sut:
    resources:
      - configMap:
         name: "example-configmap"
         files:
           - "uc1-kstreams-deployment.yaml"
    beforeActions:
      - selector:
          pod:
            matchLabels:
              app: kafka-client
          container: "abc" # optional (if there is only one container or there exists something like a default container)
        exec:
          command: "kafka-topics.sh --create --topic abc" # or list
  loadGenerator:
    resources:
      - configMap:
         name: "example-configmap"
         files:
            - uc1-load-generator-service.yaml
            - uc1-load-generator-deployment.yaml
    beforeActions:
      - selector:
          pod:
            matchLabels:
              app: kafka-client
          container: "abc" # optional (if there is only one container or there exists something like a default container)
        exec:
          command: "kafka-topics.sh --create --topic abc" # or list
  resourceTypes:
    - typeName: "Instances"
      patchers:
        - type: "ReplicaPatcher"
          resource: "uc1-kstreams-deployment.yaml"
  loadTypes:
    - typeName: "NumSensors"
      patchers:
        - type: "EnvVarPatcher"
          resource: "uc1-load-generator-deployment.yaml"
          properties:
            variableName: "NUM_SENSORS"
            container: "workload-generator"
        - type: "NumSensorsLoadGeneratorReplicaPatcher"
          resource: "uc1-load-generator-deployment.yaml"
          properties:
            loadGenMaxRecords: "15000"
  kafkaConfig:
    bootstrapServer: "theodolite-cp-kafka:9092"
    topics:
      - name: "input"
        numPartitions: 40
        replicationFactor: 1
      - name: "theodolite-.*"
        removeOnly: True