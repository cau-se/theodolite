plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.6.10"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.6.10"
    id 'io.quarkus'
    id "io.gitlab.arturbosch.detekt" version "1.15.0"
    id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-kubernetes-client'

    implementation 'org.bouncycastle:bcprov-ext-jdk15on:1.69'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.69'
    
    implementation 'org.slf4j:slf4j-simple:1.7.32'
    implementation 'io.github.microutils:kotlin-logging:2.1.16'
    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    implementation 'khttp:khttp:1.0.0'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-test-kubernetes-client'
    //testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.33.2'
    testImplementation 'org.junit-pioneer:junit-pioneer:1.5.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
}

group 'theodolite'
version '0.9.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

test {
    // Required because of https://github.com/quarkusio/quarkus/issues/18973
    minHeapSize = "256m"
    maxHeapSize = "1024m"
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true
    ignoreFailures = true
}

ktlint {
    ignoreFailures = true
}