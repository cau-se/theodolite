apiVersion: theodolite.rocks/v1beta1
kind: benchmark
metadata:
  name: uc2-hazelcastjet
  labels:
    suite: theodolite-stream-processing
    benchmark: uc2
    sut: hazelcastjet
spec:
  sut:
    resources:
      - configMap:
          name: "benchmark-resources-uc2-hazelcastjet"
          files:
            - "uc2-hazelcastjet-deployment.yaml"
            - "uc2-hazelcastjet-service.yaml"
            - "uc2-jmx-configmap.yaml"
            - "uc2-service-monitor.yaml"
  loadGenerator:
    resources:
      - configMap:
          name: "benchmark-resources-uc2-load-generator"
          files:
            - "uc2-load-generator-deployment.yaml"
            - "uc2-load-generator-service.yaml"
  resourceTypes:
    - typeName: "Instances"
      patchers:
        - type: "ReplicaPatcher"
          resource: "uc2-hazelcastjet-deployment.yaml"
  loadTypes:
    - typeName: "NumSensors"
      patchers:
        - type: "EnvVarPatcher"
          resource: "uc2-load-generator-deployment.yaml"
          properties:
            container: "workload-generator"
            variableName: "NUM_SENSORS"
        - type: NumSensorsLoadGeneratorReplicaPatcher
          resource: "uc2-load-generator-deployment.yaml"
          properties:
            loadGenMaxRecords: "150000"
  slos:
    - name: "lag trend"
      sloType: "lag trend"
      prometheusUrl: "http://prometheus-operated:9090"
      offset: 0
      properties:
        consumerGroup: theodolite-uc2-application
        threshold: 2000
        externalSloUrl: "http://localhost:80/evaluate-slope"
        warmup: 60 # in seconds
  kafkaConfig:
    bootstrapServer: "theodolite-kafka-kafka-bootstrap:9092"
    topics:
      - name: "input"
        numPartitions: 100
        replicationFactor: 1
      - name: "output"
        numPartitions: 100
        replicationFactor: 1
      - name: "theodolite-.*"
        removeOnly: True
